import logging
from aiogram import Bot
from aiogram.exceptions import TelegramMigrateToChat
from aiogram.fsm.context import FSMContext
from aiogram.fsm.storage.base import StorageKey
from aiogram.types import ChatMemberAdministrator, InlineKeyboardMarkup, InlineKeyboardButton

from Utils.Keyboards import btn_admin_confirm
from Utils.StateModel import AdminState
from Utils.bot_instance import bot
from Utils.config import storage, main_chat


async def state_for_user(user_id: int, chat_id: int) -> FSMContext:
    # –°–æ–∑–¥–∞—ë–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    key = StorageKey(chat_id=chat_id,user_id=user_id,bot_id=7926311537)
    context = FSMContext(storage=storage, key=key)
    return context


async def clearing_of_all_states(id_data:list[int]):
    for object_id in id_data:
        local_state = await state_for_user(object_id,object_id)
        await local_state.clear()

# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏–µ–º HR
async def MessageForHr():
    try:
        await bot.send_message(
            text='<b>üíº –ò—â–µ—Ç–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤?</b>\n'
                    '–í—ã –º–æ–∂–µ—Ç–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–≤–æ—é –≤–∞–∫–∞–Ω—Å–∏—é'
                    ' –±–µ—Å–ø–ª–∞—Ç–Ω–æ —á–µ—Ä–µ–∑ –Ω–∞—à–µ–≥–æ Telegram-–±–æ—Ç–∞! üéØ',
            chat_id=int(main_chat),
            reply_markup=
            InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text='–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å üî∞',url='t.me/Haltura98_bot')]
            ]
            )
        )
    except Exception as e:
        logging.error(e)


async def request_sender(admin_data:list[int],post_text:str,username:str,post_id:int):

    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ –≤—Å–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
    :param admin_data: ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    :param post_text: —Ç–µ–∫—Å—Ç –∑–∞—è–≤–∫–∏
    :param username: username –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
    :param post_id: ID –ø–æ—Å—Ç–∞
    :return: None
    """

    # –æ—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
    for admin_id in admin_data:

        # —Å–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç state –¥–ª—è –∞–¥–º–∏–Ω–∞
        local_state = await state_for_user(admin_id, admin_id)
        # –º–µ–Ω—è–µ–º –µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∑–∞—è–≤–∫—É
        await local_state.set_state(AdminState.waiting_action)

        # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞—è–≤–∫—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
        message_obj = await bot.send_message(
            chat_id=admin_id,
            text=f"{post_text}\n"
                 f"–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å - @{username}",
            reply_markup=btn_admin_confirm(post_id)
        )
        await local_state.update_data(message_id=message_obj.message_id)